services:
  backend:
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - /app/node_modules
    ports:
      - 4000:4000
      - 5555:5555
    networks:
      - miras_network
    env_file: ".env"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    deploy:
      resources:
        limits:
          memory: 4g
          cpus: "2.0"
        reservations:
          memory: 2g

  db:
    image: postgres:16.0-alpine
    restart: unless-stopped
    env_file: ".env"
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - miras_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1.0"

volumes:
  db_data:

networks:
  miras_network:
    driver: bridge
